name: Theme deploy prd CICD

on:
  workflow_call:
    inputs:
      REACT_APP_API_AUTH_URL_PFV:
        description: "URL de l'API Auth PFV"
        required: true
        type: string
      REACT_APP_API_AUTH_URL_PRD:
        description: "URL de l'API Auth PRD"
        required: true
        type: string
      REACT_APP_API_COMPONENT_URL_PFV:
        description: "URL de l'API Component PFV"
        required: true
        type: string
      REACT_APP_API_COMPONENT_URL_PRD:
        description: "URL de l'API Component PRD"
        required: true
        type: string
      REACT_APP_URL:
        description: "URL de l'application"
        required: true
        type: string
      REACT_APP_THEME:
        description: "ThÃ¨me de l'application"
        required: true
        type: string
      REACT_APP_ENV:
        description: "Environnement de l'application"
        required: true
        type: string
      REACT_APP_FRONT_AUTHENTIFICATION_PFV:
        description: "URL de l'authentification front PFV"
        required: true
        type: string
      REACT_APP_FRONT_AUTHENTIFICATION_PRD:
        description: "URL de l'authentification front PRD"
        required: true
        type: string
      TOKEN_GITHUB:
        description: "GitHub Token for repository access"
        required: true
        type: string
      KUBECONFIG_PFV:
        description: "Kubeconfig pfv for Helm"
        required: true
        type: string
      KUBECONFIG_PRD:
        description: "Kubeconfig prd for Helm"
        required: true
        type: string
      TAG_NAME:
        description: "Nom du tag GitHub pour versionner l'image"
        required: true
        type: string

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '21.7.3'

    - name: Create .env file
      run: |
        echo "REACT_APP_API_AUTH_URL=${{ inputs.REACT_APP_API_AUTH_URL_PRD }}" >> .env
        echo "REACT_APP_API_COMPONENT_URL=${{ inputs.REACT_APP_API_COMPONENT_URL_PRD }}" >> .env
        echo "REACT_APP_URL=${{ inputs.REACT_APP_URL }}" >> .env
        echo "REACT_APP_THEME=${{ inputs.REACT_APP_THEME }}" >> .env
        echo "REACT_APP_ENV=pfv" >> .env
        echo "REACT_APP_FRONT_AUTHENTIFICATION=${{ inputs.REACT_APP_FRONT_AUTHENTIFICATION_PRD }}" >> .env

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.TOKEN_GITHUB }}

    #- name: Build and push Docker image with Tag
    #  run: |
    #    docker buildx create --use
    #    docker buildx build --platform linux/amd64,linux/arm64 \
    #      -t ghcr.io/${{ github.repository }}:${{ inputs.TAG_NAME }} \
    #      --push .

    - name: Checkout Helm Chart Repository
      uses: actions/checkout@v3
      with:
        repository: sisent-it/helm-theme
        path: helm-chart
        ref: main 
        token: ${{ inputs.TOKEN_GITHUB }}

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ inputs.KUBECONFIG_PRD }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    #- name: Extract Tag
    #  run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    #- name: Upgrade pfv Helm Release
    #  run: |
    #    helm upgrade --install default-${{ inputs.REACT_APP_THEME }}-myhappyweb-com --namespace site ./helm-chart \
    #      --values ./helm-chart/values.yaml \
    #      --set release_name=default-${{ inputs.REACT_APP_THEME }}-myhappyweb-com \
    #      --set image.repository=ghcr.io/${{ github.repository }} \
    #      --set image.tag=${{ inputs.TAG_NAME }} \
    #      --recreate-pods

    # Installer google-cloud-cli (qui inclut gsutil)
    - name: Install google-cloud-cli (includes gsutil)
      run: |
        sudo apt-get update && sudo apt-get install -y google-cloud-cli

    # Authentification sur le projet source (myhappyweb-pfv)
    - name: Authenticate to Google Cloud (myhappyweb-pfv)
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ vars.GCP_SA_KEY_PFV }}

    # Copier les fichiers du bucket source (myhappyweb-pfv)
    - name: Copy files from myhappyweb-site bucket to a local folder
      run: |
        echo ${{ vars.GCP_SA_KEY_PFV }}
     #   gsutil -m cp -r gs://myhappyweb-site/* ./bucket-content/

    # Authentification sur le projet cible (myhappyweb-prd)
   # - name: Authenticate to Google Cloud (myhappyweb-prd)
   #   uses: google-github-actions/auth@v1
   #   with:
   #     credentials_json: ${{ secrets.GCP_SA_KEY_PRD }}

    # Copier les fichiers du dossier local vers le bucket cible (myhappyweb-prd)
    #- name: Copy files to myhappyweb-int bucket
    #  run: |
    #    gsutil -m cp -r ./bucket-content/* gs://myhappyweb-int/
