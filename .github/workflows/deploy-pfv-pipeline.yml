name: Theme deploy pfv CICD

on:
  workflow_call:
    inputs:
      REACT_APP_API_AUTH_URL_PFV:
        description: "URL de l'API Auth PFV"
        required: true
        type: string
      REACT_APP_API_AUTH_URL_PRD:
        description: "URL de l'API Auth PRD"
        required: true
        type: string
      REACT_APP_API_COMPONENT_URL_PFV:
        description: "URL de l'API Component PFV"
        required: true
        type: string
      REACT_APP_API_COMPONENT_URL_PRD:
        description: "URL de l'API Component PRD"
        required: true
        type: string
      REACT_APP_URL:
        description: "URL de l'application"
        required: true
        type: string
      REACT_APP_THEME:
        description: "Thème de l'application"
        required: true
        type: string
      REACT_APP_ENV:
        description: "Environnement de l'application"
        required: true
        type: string
      REACT_APP_FRONT_AUTHENTIFICATION_PFV:
        description: "URL de l'authentification front PFV"
        required: true
        type: string
      REACT_APP_FRONT_AUTHENTIFICATION_PRD:
        description: "URL de l'authentification front PRD"
        required: true
        type: string
      TOKEN_GITHUB:
        description: "GitHub Token for repository access"
        required: true
        type: string
      KUBECONFIG_PFV:
        description: "Kubeconfig pfv for Helm"
        required: true
        type: string
      KUBECONFIG_PRD:
        description: "Kubeconfig prd for Helm"
        required: true
        type: string
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '21.7.3'

    # Vérifier si les variables d'entrée ne sont pas vides
    - name: Check input variables
      run: |
        if [ -z "${{ inputs.REACT_APP_API_AUTH_URL_PFV }}" ] || [ -z "${{ inputs.REACT_APP_API_AUTH_URL_PRD }}" ] || \
           [ -z "${{ inputs.REACT_APP_API_COMPONENT_URL_PFV }}" ] || [ -z "${{ inputs.REACT_APP_API_COMPONENT_URL_PRD }}" ] || \
           [ -z "${{ inputs.REACT_APP_URL }}" ] || [ -z "${{ inputs.REACT_APP_THEME }}" ] || \
           [ -z "${{ inputs.REACT_APP_ENV }}" ] || [ -z "${{ inputs.REACT_APP_FRONT_AUTHENTIFICATION_PFV }}" ] || \
           [ -z "${{ inputs.REACT_APP_FRONT_AUTHENTIFICATION_PRD }}" ] || [ -z "${{ inputs.TOKEN_GITHUB }}" ] || \
           [ -z "${{ inputs.KUBECONFIG_PFV }}" ] || [ -z "${{ inputs.KUBECONFIG_PRD }}" ]; then
          echo "Error: One or more required input variables are missing."
          exit 1
        fi
      shell: bash

    - name: Install dependencies
      run: npm install

    - name: Run build
      run: npm run build

    # Test du Dockerfile pour vérifier la construction de l'image
    - name: Build Docker image
      run: |
        docker build -t my-app:latest .
      # Vérifier si Docker est installé
      env:
        DOCKER_BUILDKIT: 1  # Utilise BuildKit pour des builds plus rapides et plus efficaces

  deploy_pfv:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "REACT_APP_API_AUTH_URL=${{ inputs.REACT_APP_API_AUTH_URL_PFV }}" >> .env
        echo "REACT_APP_API_COMPONENT_URL=${{ inputs.REACT_APP_API_COMPONENT_URL_PFV }}" >> .env
        echo "REACT_APP_URL=${{ inputs.REACT_APP_URL }}" >> .env
        echo "REACT_APP_THEME=${{ inputs.REACT_APP_THEME }}" >> .env
        echo "REACT_APP_ENV=pfv" >> .env
        echo "REACT_APP_FRONT_AUTHENTIFICATION=${{ inputs.REACT_APP_FRONT_AUTHENTIFICATION_PFV }}" >> .env

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.TOKEN_GITHUB }}

    - name: Build and push Docker image
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/${{ github.repository }}:latest --push .

    - name: Checkout Helm Chart Repository
      uses: actions/checkout@v3
      with:
        repository: sisent-it/helm-theme-renaissance
        path: helm-chart
        ref: main 
        token: ${{ inputs.TOKEN_GITHUB }}

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ inputs.KUBECONFIG_PFV }}" > ~/.kube/config

    - name: Upgrade pfv Helm Release
      run: |
        helm upgrade --install default-${{ github.event.repository.name }} ./helm-chart --values ./helm-chart/env/pfv/values.yaml --recreate-pods
