name: Test Build Pipeline CICD

on:
  workflow_call:
    inputs:
      REACT_APP_API_AUTH_URL_PFV:
        description: "URL de l'API Auth PFV"
        required: true
        type: string
      REACT_APP_API_AUTH_URL_PRD:
        description: "URL de l'API Auth PRD"
        required: true
        type: string
      REACT_APP_API_COMPONENT_URL_PFV:
        description: "URL de l'API Component PFV"
        required: true
        type: string
      REACT_APP_API_COMPONENT_URL_PRD:
        description: "URL de l'API Component PRD"
        required: true
        type: string
      REACT_APP_URL:
        description: "URL de l'application"
        required: true
        type: string
      REACT_APP_THEME:
        description: "Thème de l'application"
        required: true
        type: string
      REACT_APP_ENV:
        description: "Environnement de l'application"
        required: true
        type: string
      REACT_APP_FRONT_AUTHENTIFICATION_PFV:
        description: "URL de l'authentification front PFV"
        required: true
        type: string
      REACT_APP_FRONT_AUTHENTIFICATION_PRD:
        description: "URL de l'authentification front PRD"
        required: true
        type: string
      REACT_APP_API_ANALYTICS_PFV:
        description: "URL de l'authentification front PRD"
        required: true
        type: string
      REACT_APP_API_ANALYTICS_PRD:
        description: "URL de l'authentification front PRD"
        required: true
        type: string
      REACT_APP_API_MAIL_URL:
        description: "URL de l'API Mail PFV"
        required: true
        type: string
      REACT_APP_AUTH_USERNAME:
        description: "Nom d'utilisateur pour l'authentification"
        required: true
        type: string
    secrets:
      TOKEN_GITHUB:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      KUBECONFIG_PRD:
        required: true
      KUBECONFIG_PFV:
        required: true
      GCP_SA_KEY_PRD:
        required: true
      GCP_SA_KEY_PFV:
        required: true
      REACT_APP_AUTH_PASSWORD:
        required: true
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Récupérer le dépôt du projet
      - name: Checkout repository
        uses: actions/checkout@v3
  
      # Configurer l'agent SSH pour utiliser la clé privée
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        # Cette étape configure un agent SSH et ajoute la clé privée pour les connexions SSH.
  
      # Désactiver la vérification stricte des clés hôtes pour SSH
      - name: Disable host key checking
        run: |
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
        # Cela désactive la vérification stricte des clés hôtes pour éviter des erreurs lors de la connexion SSH.
  
      # Configurer git pour utiliser SSH pour GitHub packages
      - name: Configure git to use SSH for GitHub packages
        run: |
          git config --global url."git@github.com:".insteadOf "https://github.com/"
        # Cette étape force git à utiliser SSH pour tous les dépôts GitHub.
  
      # Installation des dépendances avec npm
      - name: Install dependencies
        run: npm install
        # Installation des dépendances du projet avec npm.
  
      # Lancer le processus de build pour React
      - name: Build React app
        run: npm run build
        # Cette étape construit l'application React pour la production.
  
      # Lancer le processus de build Docker sans refaire npm install
      - name: Build Docker image
        run: |
          DOCKER_BUILDKIT=1 docker build -t my-app:latest .
        # Cette étape crée une image Docker de l'application en copiant simplement les dépendances et les fichiers déjà construits.
  